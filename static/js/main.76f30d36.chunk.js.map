{"version":3,"sources":["types/FilterStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/TodoCompleteStatus.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","TodoList","todos","selectTodo","selectedTodo","className","map","todo","completed","id","title","isSelected","cn","type","onClick","handleSelect","TodoFilter","setFilteredValue","filteredBy","setAppliedQuery","useState","query","setQuery","applyQuery","useCallback","value","debounce","onChange","e","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoCompleteStatus","TodoModal","deleteSelectedTodo","userId","user","setUser","useEffect","getUser","Done","Planned","href","email","name","App","isLoading","setIsLoading","setTodos","setSelectedTodo","filterByStatus","setFilterByStatus","searchQuery","setSearchQuery","items","visibleTodos","filter","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76f30d36.chunk.js","sourcesContent":["export enum FilterStatus {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: number,\n  selectTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  const handleSelect = (todo: Todo) => {\n    selectTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            completed,\n            id,\n            title,\n          } = todo;\n\n          const isSelected = id === selectedTodo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isSelected,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'\n                  }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={\n                        isSelected\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye'\n                      }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import debounce from 'lodash.debounce';\nimport { useCallback, useState } from 'react';\n\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  filteredBy: FilterStatus,\n  setFilteredValue: (value: FilterStatus) => void\n  setAppliedQuery: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilteredValue,\n  filteredBy,\n  setAppliedQuery,\n}) => {\n  const [query, setQuery] = useState('');\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilteredValue(e.target.value as FilterStatus);\n  };\n\n  const applyQuery = useCallback((value) => debounce(() => {\n    setAppliedQuery(value);\n  }, 1000)(), [setAppliedQuery]);\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setQuery('');\n    applyQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={handleSelect}\n          >\n            <option\n              value={FilterStatus.All}\n            >\n              {FilterStatus.All}\n            </option>\n            <option\n              value={FilterStatus.Active}\n            >\n              {FilterStatus.Active}\n            </option>\n            <option\n              value={FilterStatus.Completed}\n            >\n              {FilterStatus.Completed}\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleOnChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum TodoCompleteStatus {\n  Done = 'Done',\n  Planned = 'Planned',\n}\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodoCompleteStatus } from '../../types/TodoCompleteStatus';\n\ntype Props = {\n  todo: Todo,\n  deleteSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    todo,\n    deleteSelectedTodo,\n  },\n) => {\n  const {\n    completed,\n    id,\n    title,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleCloseModal = () => {\n    deleteSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={cn({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {completed\n                    ? TodoCompleteStatus.Done\n                    : TodoCompleteStatus.Planned}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterStatus } from './types/FilterStatus';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterByStatus, setFilterByStatus] = useState(FilterStatus.All);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(items => {\n      setIsLoading(false);\n      setTodos(items);\n    });\n  }, []);\n\n  const visibleTodos = todos\n    .filter(todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase().trim()))\n    .filter(todo => {\n      switch (filterByStatus) {\n        case FilterStatus.Active:\n          return !todo.completed;\n\n        case FilterStatus.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteredBy={filterByStatus}\n                setFilteredValue={setFilterByStatus}\n                setAppliedQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              { visibleTodos && !isLoading && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo ? selectedTodo.id : 0}\n                  selectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          deleteSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}